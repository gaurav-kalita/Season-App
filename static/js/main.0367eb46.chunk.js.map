{"version":3,"sources":["SeasonDisplay.js","spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Spinner","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","this","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"6LAKMA,G,MAAe,CACjBC,OAAQ,CACJC,KAAM,4CACNC,SAAU,OAEdC,OAAO,CACHF,KAAM,8CACNC,SAAU,eA2BHE,EAbO,SAAAC,GAClB,IAVeC,EAAIC,EAUbC,GAVSF,EAUUD,EAAMC,KAVZC,GAUiB,IAAIE,MAAOC,YATnC,GAAKH,EAAQ,EACdD,EAAM,EAAI,SAAW,SAGrBA,EAAM,EAAI,SAAW,UAIN,EAEDP,EAAaS,GAA/BP,EAFmB,EAEnBA,KAAMC,EAFa,EAEbA,SAEb,OACI,yBAAKS,UAAS,yBAAoBH,IAClC,uBAAGG,UAAS,4BAAuBT,EAAvB,WACZ,4BAAKD,GACL,uBAAGU,UAAS,6BAAyBT,EAAzB,aCxBLU,EARC,WACZ,OACI,yBAAKD,UAAU,oBACf,yBAAKA,UAAU,sBAAf,iBCEDE,E,4MACHC,MAAS,CAACR,IAAI,KAAMS,aAAa,I,kEAEb,IAAD,OACfC,OAAOC,UAAUC,YAAYC,oBACzB,SAAAC,GAAQ,OAAG,EAAKC,SAAS,CAACf,IAAIc,EAASE,OAAOC,cAC9C,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAACN,aAAcS,EAAIC,e,sCAK5C,OAAIC,KAAKZ,MAAMC,eAAiBW,KAAKZ,MAAMR,IAChC,uCAAaoB,KAAKZ,MAAMC,eAG/BW,KAAKZ,MAAMC,cAAgBW,KAAKZ,MAAMR,IAC/B,kBAAC,EAAD,CAAeA,IAAKoB,KAAKZ,MAAMR,MAGnC,kBAAC,EAAD,CAASmB,QAAQ,qC,+BAIxB,OAAO,yBAAKd,UAAU,cAAce,KAAKC,qB,GAvB9BC,IAAMC,WA4BzBC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,cAAc,W","file":"static/js/main.0367eb46.chunk.js","sourcesContent":["import './SeasonDisplay.css';\r\nimport React from 'react';\r\n\r\n\r\n// config  function\r\nconst seasonConfig = {\r\n    summer: {\r\n        text: \"Its summer out there, lets grab a beer..!\",\r\n        iconName: 'sun',\r\n    },\r\n    winter:{\r\n        text: 'Its winter out there, get some warm clothes',\r\n        iconName: 'snowflake',\r\n    }\r\n};\r\n\r\n// helper functions\r\nconst getSeason = (lat,month) => {\r\n    if (month > 2 && month < 9) {\r\n        return lat > 0 ? 'summer' : 'winter';\r\n    }\r\n    else{\r\n        return lat > 0 ? 'winter' : 'summer';\r\n    }\r\n};\r\n\r\nconst SeasonDisplay = props =>{\r\n    const season = getSeason(props.lat, new Date().getMonth());\r\n    const {text, iconName} = seasonConfig[season];\r\n\r\n    return(\r\n        <div className={`season-display ${season}`}>\r\n        <i className={`icon-left massive ${iconName} icon`}/>\r\n        <h1>{text}</h1>\r\n        <i className= {`icon-right massive ${iconName} icon`}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SeasonDisplay;","import React from 'react';\r\n\r\nconst Spinner = () =>{\r\n    return(\r\n        <div className='ui active dimmer'> \r\n        <div className='ui big text loader'> Loading...</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React from  'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay.js';\nimport Spinner from './spinner.js';\n\n\n\n class App extends React.Component{\n    state =  {lat:null, errorMessage:''};\n\n    componentDidMount(){\n        window.navigator.geolocation.getCurrentPosition(                  \n            position=> this.setState({lat:position.coords.latitude}),\n            err => this.setState({errorMessage: err.message})\n        );\n    }\n\n    renderContent(){\n        if (this.state.errorMessage && !this.state.lat){\n            return <div>Error: {this.state.errorMessage}</div>;\n        }\n\n        if(!this.state.errorMessage && this.state.lat){\n            return <SeasonDisplay lat={this.state.lat} />;\n        }\n\n        return <Spinner message=\"Please accept location request\" />;\n    }\n\n    render(){\n        return <div className=\"border red\">{this.renderContent()}</div>;\n    }\n}\n \n\nReactDOM.render(<App/>, document.querySelector('#root'));"],"sourceRoot":""}